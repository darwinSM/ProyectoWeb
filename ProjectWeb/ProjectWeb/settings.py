"""
Django settings for ProjectWeb project.

Generated by 'django-admin startproject' using Django 4.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
#importacion para leer variables de entorno secretas .env
from decouple import config

#Expecificar que se van a ulizar los message tags (etiquetas de mensaje), con un alias definido por el prgramador
from django.contrib.messages import constants as messages

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
#SECRET_KEY = '       '    # Variables SECRETAS - Estan en .env
SECRET_KEY = config('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
#DEBUG =                   # Variables SECRETAS - Estan en .env
DEBUG = config('DEBUG', cast=bool)

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # local app
    'AppWeb',
    'AppServicios',
    'AppBlog' ,
    'AppContacto' ,
    'AppTienda',
    'AppShopingCart' ,
    'AppAuth' ,
    'AppPedido' ,

    #librerias
    'crispy_forms',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'ProjectWeb.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                #ruta de context_processor del proyecto
                'AppShopingCart.context_processor.importe_total_carrito',
            ],
        },
    },
]

WSGI_APPLICATION = 'ProjectWeb.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

#LANGUAGE_CODE = 'en-us'
LANGUAGE_CODE = 'es'  #Configura el panel de control de django en espa√±ol

#TIME_ZONE = 'UTC'
TIME_ZONE = 'America/Bogota'    #Configura la zona horario

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'
#Establecer nueva ruta del directorio con los archivos estaticos css, js , jpg importados de bootstrp
#STATICFILES_DIRS = [BASE_DIR / 'static', 'D:/"Universidad MinTic 2022"/"Curso Django - PIldoras Informaticas"/Proyecto_Web/ProjectWeb/AppWeb/static/' , ]

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field


# al parecer en versiones de django mas recientes esta ubiccion se cre por defecto desde models
# en el parameto  ImageFiel(upload_to = /<nombre del directorio>/) y crea la carpeta y django crea ese drectorio 
MEDIA_URL ='/media/'      #url publica que aparece en la barra del navegador - ubicacion de los arhivos multimedia
MEDIA_ROOT = BASE_DIR / 'media'   #Se configura django para decirle donde buscar los archivos mutimedia

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# configuracion de email

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'

# Host for sending e-mail. (host de gmail)
EMAIL_HOST = 'smtp.gmail.com'

# protocolo Servidor que requiere autenticacion para iniciar sesion
EMAIL_USE_TLS = True

# Port for sending e-mail.
EMAIL_PORT = 587

# Optional SMTP authentication information for EMAIL_HOST.

#EMAIL_HOST_USER = '               '         # Variables SECRETAS - Estan en .env
#EMAIL_HOST_PASSWORD = '           '                  # Variables SECRETAS - Estan en .env

EMAIL_HOST_USER = config('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = config('EMAIL_HOST_PASSWORD')

# Cargar el paquete crispy en bootstrap
CRISPY_TEMPLATE_PACK = 'bootstrap4'


# Importando estas lineas de codigo , con sus tags, es posible utilzar ahora los mensajes derror en las plantillas html
MESSAGE_TAGS = {
    messages.DEBUG: 'debug',
    messages.INFO: 'info',
    messages.SUCCESS: 'success',
    messages.WARNING: 'warning',
    messages.ERROR: 'danger',
}